<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<!--2022.2.14(월) 15h30
		pom.xml 파일 구조 = project 태그로 감싸져있음 = 프로젝트(에 대한) 정보(modelVersion~version 태그) + properties + [repositories(지금은 안 보임)] + dependencies + build-->
	
	<!--프로젝트에 대한 정보
		groupId = 2번째 level까지의 패키지 구조
		artifactId = 3번째 level의 패키지명 = contextRoot = 프로그램명
		packaging = 배포할 때 압축될 형식 -> war(web이라서 war) vs jar는 그냥 프로그램 -> 나의 질문 = '배포'란 무엇인가?-->
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.kh</groupId>
	<artifactId>spring</artifactId>
	<name>springProject</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	
	<!--properties = 이 문서에서 사용할 환경 설정 내용들을 담은 변수; 태그명 = 변수명 -> '${태그/변수명}'으로 해당 값을 불러올 수 있음-->
	<properties>
		<!--2022.2.14(월) 15h25-->
		<!--변수 선언(e.g. 변수 int <a> = 10;)하듯 기재되어 있는 것임 -> 태그(명) = 변수명, 태그 안의 content = 리터럴/값-->
		<java-version>1.8</java-version> <!--1.6으로 기재되어 있던 것을 현재 내가 사용하고 있는/설치해둔 version인 1.8로 수정함-->
		<org.springframework-version>5.3.14</org.springframework-version> <!--원래 '3.1.1 Release'로 되어있었음; 3 = major version = 아주 구닥다리 버전 vs 현재 version 5 -> spring 공식 웹사이트에 가서 최신 버전 확인한 뒤, 이 태그 content 수정-->
		<!--현재 가장 최신 버전은 5.3.15인데, 강사님께서 테스트해 보신 5.3.14로 수정-->
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
	
	<!--repositories = 추후 필요할 때 와서 만들 것임 -> 2022.2.14(월) 16h35 기본 저장소에서 다운로드 받지 못하는 경우 직접 다운 받고자 하는 사설 저장소를 등록-->
	<repositories>
		<!--ojdbc6 dependency 관련-->
		<repository>
			<id>Datanucleus</id>
			<url>http://www.datanucleus.org/downloads/maven2/</url>
		</repository>
	
	</repositories>
	
	<!--중요한/핵심 부분 = dependencies = 프로젝트에서 사용할 libraries의 정보들을 담는 곳
		내가 다운로드 받고자 하는 라이브러리 = 의존성 라이브러리
		pom.xml 저장(실행?) 시 관련 libraries가 C:\dev\apache-maven-3.8.4\repository에 다운로드됨(2022.2.17(목) 수업 후 18h10 기재했는데, 내가 이해한 것이 맞나?-->
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version> <!--el 구문 -> properties의 태그의 content 영역에 들어있는 값이 호출되어 옴-->
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId> <!--원래 servlet-api -> 버전 바꿨더니 빨간줄 떠서 수정-->
			<version>4.0.1</version> <!--2022.2.14(월) 16h15 원래 2.5 -> 안 바꿔도 작동은 하는데, 이 파일 수정하는 김에 tomcat8.5와 잘 호환되는 버전으로 변경-->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId> <!--원래 jsp-api -> 버전 바꿨더니 빨간줄 떠서 수정-->
			<version>2.3.3</version> <!--원래 2.1 -> 안 바꿔도 작동은 하는데, 이 파일 수정하는 김에 tomcat8.5와 잘 호환되는 버전으로 변경-->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId> <!--2022.2.14(월) 17h10 Maven이 가져온 jstl 잘 작동 안 함 -> 'webapp > WEB-INF > lib' 폴더 만들어서 관련 jar(taglibs) 4개 직접 추가해줌-->
			<version>1.2</version>
		</dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		
		<!--2022.2.14(월) 16h25 추가적으로 필요한 libraries 세팅 <- 쇼핑
			1. db 관련(Oracle, MyBatis) libraries
			1a) ojbc6 library-->
		<!-- https://mvnrepository.com/artifact/oracle/ojdbc6 -->
		<dependency> <!--빨간줄 = Missing artifact oracle:ojdbc6:jar:11.2.0.3 <- mvnrepository.com(기본 저장소? 맞나? 16h35 강사님 설명 너무 빨라서 제대로 못 들음) 말고, 사설 저장소에 가서 받아와야 함 ou repositories 태그에 사설 저장소 등록-->
		    <groupId>oracle</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.2.0.3</version>
		</dependency>
		
		<!--1b) Spring에서 jdbc 기능을 사용하기 위한 library-->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${org.springframework-version}</version> <!--기본 저장소에서 5.3.14로 기재된 것을 복사해 왔는데, 추후 버전 변경 시 이 부분 수정 누락할 수 있는 등 유지/보수의 편의성을 위해 el 구문으로 변경-->
		</dependency>
		
		<!--1c) 순수 MyBatis-->
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.5.7</version>
		</dependency>
		
		<!--1d) Spring에서 MyBatis를 이용하기 위한 library-->
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.3.2</version>
		</dependency>
		
		<!--1e) Connection Pool을 사용하기 위한  library -> 17h 나의 질문 = MyBatis Connection Pool이 뭐였지? >.< -> mybatisProject의 mybatis-config.xml 파일 참고-->
		<!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>1.4</version>
		</dependency>
		
		<!--2022.2.17(목) 17h30 vo 객체 관련 플러그인 추가하고자 함
			2. Lombok library
			호환성 등의 문제로 우리반 28명 학생 중 1명 정도 작동 안 될 수도 있음; 조원 중에 1명이라도 작동 안 되는 library는 사용하지 말기
			아래와 같이 플러그인 추가 코드 작성한 뒤, C:\dev\apache-maven-3.8.4\repository\org\projectlombok\lombok\1.18.12 경로에 가서 lombok-1.18.12.jar 파일 실행 vs 아이콘 double-click해서 실행 안 되는 경우(압축 해제 프로그램이 깔려있던 경우 등), 명령프롬프트 가서 명령어 쳐서 실행(강사님 화면 캡쳐해둠)-->
			
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.12</version>
		    <scope>provided</scope>
		</dependency>
		
		<!--2022.2.18(금) 10h30
			3. Spring security module(core, web, config) -> 나의 질문 = 이 library의 역할?은 무엇인가?
			Spring이 사용할 수 있도록 + 내가 만든 게 아니므로 annotation을 통해(x) root-context.xml 파일에(o) bean 등록 -> 지금까지 root-context.xml에 beans 등록했었는데, 보안 관련된  beans 따로 모아두기 위해 Spring bean configuration file 새로 하나 생성-->
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>5.5.2</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
		    <version>5.5.2</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
		    <version>5.5.2</version>
		</dependency>
		
		<!--2022.2.21(월) 15h15
			4. 파일 업로드를 위한 libraries
			https://mvnrepository.com에서 'commons-fileupload' 검색-->
		<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.3.3</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.6</version>
		</dependency>
		
		<!--2022.2.23(수) 16h50
			5. JSON, GSON(AJAX) libraries-->
		<!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->
		<dependency>
		    <groupId>com.googlecode.json-simple</groupId>
		    <artifactId>json-simple</artifactId>
		    <version>1.1.1</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.8.5</version>
		</dependency>
		
		<!--2022.3.16(수) 1h25 어제 수업 캡쳐 내역 보면, 이 자리에 websocket 라이브러리 있어야 하는데, 나는 왜 없지..? >.<-->
		
		<!--2022.3.15(화) 9h20 mail 전송 관련
			내 프로젝트에서 사용하는 Spring 버전을 참조할 것이므로, Maven repository 사이트에서 어느 버전을 다운로드 받아도 상관 없긴 함-->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-context-support -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-support</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/javax.mail/javax.mail-api -->
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>javax.mail-api</artifactId>
		    <version>1.6.2</version>
		</dependency>
		
		<!--아래 dependency는 바로 위 dependency 복사/붙여넣기 후, 내가 직접 작성/수정한 것임-->
		<dependency>
		    <groupId>com.sun.mail</groupId>
		    <artifactId>javax.mail</artifactId>
		    <version>1.6.2</version>
		</dependency>	
		
	</dependencies>
	
	<!--2022.2.14(월) 16h20 실제 명령 수행 시 필요한 설정 = 이 명령을 실행할 때 누가, 어떻게, 할 것인지 정의해 두는 곳-->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
